<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <tool name="camera_plane" label="Camera Plane" icon="COP2_frontface">
    <helpURL>operator:Object/camera_plane_ql?namespace=qLib&amp;version=2</helpURL>
    <toolMenuContext name="network">
      <contextOpType>qLib::Object/camera_plane_ql::2</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'qLib::camera_plane_ql::2' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_camera_plane (qLib::Object/camera_plane_ql::2)
set _obj_camera_plane = `run("opadd -e -n -v qLib::camera_plane_ql::2 camera_plane")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_camera_plane
opspareds '    parm {         name    "import_file_path"         label   "import_file_path"         type    string         invisible         default { "" }     }     group {         name    "folder2"         label   "Camera Plane"          parm {             name    "space_"             baseparm             label   "space_"             invisible             export  none         }         parm {             name    "camera"             baseparm             label   "Camera"             joinnext             export  none         }         parm {             name    "camera_presets"             baseparm             label   "Camera Presets"             export  none         }         groupsimple {             name    "folder3"             label   "Plane Settings"             grouptag { "group_type" "simple" }              parm {                 name    "space"                 baseparm                 label   "Space"                 export  none             }             parm {                 name    "plane_distance"                 baseparm                 label   "Plane Distance"                 joinnext                 export  none             }             parm {                 name    "plane_distance_presets"                 baseparm                 label   "presets"                 nolabel                 export  none             }             parm {                 name    "center"                 baseparm                 label   "Center"                 export  none             }             parm {                 name    "overscan"                 baseparm                 label   "Overscan"                 export  none             }             parm {                 name    "use_screenwindow"                 baseparm                 label   "Use Screen Window Settings"                 export  none             }             group {                 name    "folder0_3"                 label   "Shading"                  parm {                     name    "gl_wireframe"                     baseparm                     label   "Wireframe Mode"                     export  none                 }                 parm {                     name    "material"                     baseparm                     label   "Apply Material"                     nolabel                     joinnext                     export  none                 }                 parm {                     name    "material_mode"                     baseparm                     label   "Material Mode"                     export  none                 }                 parm {                     name    "material_color"                     baseparm                     label   "Tint"                     export  none                 }                 parm {                     name    "texture"                     baseparm                     label   "Texture"                     export  none                 }                 parm {                     name    "sep_1"                     baseparm                     label   "----"                     nolabel                     export  none                 }                 parm {                     name    "fr_enable"                     baseparm                     label   "Enable Frame Retiming"                     nolabel                     joinnext                     export  none                 }                 parm {                     name    "fr_range"                     baseparm                     label   "Sequence Range"                     joinnext                     export  none                 }                 parm {                     name    "fr_clamp"                     baseparm                     label   "Clamp"                     export  none                 }                 parm {                     name    "fr_startframeat"                     baseparm                     label   "Start at"                     export  none                 }                 parm {                     name    "fr_currentframe"                     baseparm                     label   "Current Frame \\\\#"                     export  none                 }                 parm {                     name    "fr_editable"                     baseparm                     label   "Editable Output Fields"                     nolabel                     joinnext                     export  none                 }                 parm {                     name    "fr_texture"                     baseparm                     label   "Current Texture"                     export  none                 }             }              group {                 name    "folder0_3_1"                 label   "Geometry"                  parm {                     name    "type"                     baseparm                     label   "Primitive Type"                     joinnext                     export  none                 }                 parm {                     name    "surftype"                     baseparm                     label   "Connectivity"                     nolabel                     export  none                 }                 parm {                     name    "rows"                     baseparm                     label   "Rows"                     export  none                 }                 parm {                     name    "cols"                     baseparm                     label   "Columns"                     export  none                 }                 parm {                     name    "orderu"                     baseparm                     label   "U Order"                     export  none                 }                 parm {                     name    "orderv"                     baseparm                     label   "V Order"                     export  none                 }             }              group {                 name    "folder0_3_2"                 label   "Cropping"                  parm {                     name    "cam_crop"                     baseparm                     label   "Use Camera Crop"                     export  none                 }                 parm {                     name    "cropl"                     baseparm                     label   "Left Crop"                     export  none                 }                 parm {                     name    "cropr"                     baseparm                     label   "Right Crop"                     export  none                 }                 parm {                     name    "cropb"                     baseparm                     label   "Bottom Crop"                     export  none                 }                 parm {                     name    "cropt"                     baseparm                     label   "Top Crop"                     export  none                 }             }              parm {                 name    "viewport"                 baseparm                 label   "Viewport Display"                 export  none             }             parm {                 name    "renderable"                 baseparm                 label   "Renderable"                 export  none             }         }      }      group {         name    "folder2_1"         label   "Transform"          parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  none         }         parm {             name    "r"             baseparm             label   "Rotate"             export  none         }         parm {             name    "s"             baseparm             label   "Scale"             export  none         }         parm {             name    "p"             baseparm             label   "Pivot"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             export  none         }         parm {             name    "lookatpath"             baseparm             label   "Look At"             invisible             export  none         }         parm {             name    "lookup"             baseparm             label   "Look At Up Vector"             invisible             export  none         }         parm {             name    "pathobjpath"             baseparm             label   "Path Object"             invisible             export  none         }         parm {             name    "roll"             baseparm             label   "Roll"             invisible             export  none         }         parm {             name    "pos"             baseparm             label   "Position"             invisible             export  none         }         parm {             name    "uparmtype"             baseparm             label   "Parameterization"             invisible             export  none         }         parm {             name    "pathorient"             baseparm             label   "Orient Along Path"             invisible             export  none         }         parm {             name    "up"             baseparm             label   "Orient Up Vector"             invisible             export  none         }         parm {             name    "bank"             baseparm             label   "Auto-Bank factor"             invisible             export  none         }         parm {             name    "pre_xform"             baseparm             label   "Pre-transform"             export  none         }         parm {             name    "keeppos"             baseparm             label   "Keep Position When Parenting"             export  none         }     }      group {         name    "folder2_2"         label   "Subnet"          parm {             name    "label1"             baseparm             label   "Input #1 Label"             invisible             export  all         }         parm {             name    "label2"             baseparm             label   "Input #2 Label"             invisible             export  all         }         parm {             name    "label3"             baseparm             label   "Input #3 Label"             invisible             export  all         }         parm {             name    "label4"             baseparm             label   "Input #4 Label"             invisible             export  all         }         parm {             name    "tdisplay"             baseparm             label   "Display"             joinnext             export  all         }         parm {             name    "display"             baseparm             label   "Display"             export  all         }         parm {             name    "outputobj"             baseparm             label   "Output Transform"             export  all         }         parm {             name    "visibleobjects"             baseparm             label   "Visible Children"             export  none         }         parm {             name    "picking"             baseparm             label   "Viewport Selecting Enabled"             export  none         }         parm {             name    "pickscript"             baseparm             label   "Select Script"             export  none         }         parm {             name    "caching"             baseparm             label   "Cache Object Transform"             export  none         }         parm {             name    "use_dcolor"             baseparm             label   "Set Wireframe Color"             invisible             export  none         }         parm {             name    "dcolor"             baseparm             label   "Wireframe Color"             invisible             export  none         }     }      group {         name    "folder2_3"         label   "Redshift OBJ"          group {             name    "RS_objprop_switcher"             label   "Settings"              parm {                 name    "RS_objpro_first"                 label   "RS_objpro_first"                 type    integer                 invisible                 default { "0" }                 range   { 0 10 }             }             group {                 name    "RS_campropshapes_switcher"                 label   "Render"                  parm {                     name    "RS_objprop_ID"                     label   "Object ID"                     type    integer                     default { "0" }                     range   { 0! 100 }                 }                 parm {                     name    "RS_objprop_CryptoID"                     label   "Cryptomatte ID"                     type    string                     default { "" }                 }                 parm {                     name    "RS_objprop_CryptoMatID_AllMat"                     label   "Create Cryptomatte Material IDs From Not Available Materials"                     type    toggle                     default { "1" }                 }                 parm {                     name    "RS_objpro_sep00"                     label   "RS_objpro_sep00"                     type    separator                     default { "" }                 }                 parm {                     name    "RS_objprop_ngons_enable"                     label   "Tessellate NGons"                     type    toggle                     default { "1" }                 }                 parm {                     name    "RS_objprop_ngons_tessMode"                     label   "Tessellation Mode"                     type    ordinal                     default { "0" }                     disablewhen "{ RS_objprop_ngons_enable == 0 }"                     menu {                         "0" "To Quads"                         "1" "To Triangles"                     }                 }                 parm {                     name    "RS_objprop_ngons_avoidDegen"                     label   "Remove NGons degenerated polygons"                     type    toggle                     default { "0" }                     disablewhen "{ RS_objprop_ngons_enable == 0 }"                 }                 parm {                     name    "RS_objprop_normals_normalize"                     label   "Normalize Transformed Normal Maps"                     type    toggle                     default { "0" }                 }                 parm {                     name    "RS_objpro_sep0a"                     label   "RS_objpro_sep0a"                     type    separator                     default { "" }                 }                 parm {                     name    "RS_objprop_renderAsHair"                     label   "Render Polygons as Hair"                     type    toggle                     default { "0" }                 }                 parm {                     name    "RS_objprop_defaultHairWidth"                     label   "Default Hair Width"                     type    float                     default { "0.01" }                     range   { 0! 1 }                 }                 parm {                     name    "RS_objprop_hairHalfThickness"                     label   "Match Houdini/Mantra Hair Thickness"                     type    toggle                     default { "0" }                 }                 parm {                     name    "RS_objpro_sep0b"                     label   "RS_objpro_sep0b"                     type    separator                     default { "" }                 }                 parm {                     name    "RS_objprop_mb_trans"                     label   "Enable Transformations Motion Blur"                     type    toggle                     default { "1" }                 }                 parm {                     name    "RS_objprop_mb_def"                     label   "Enable Mesh Deformations Motion Blur"                     type    toggle                     default { "1" }                 }                 parm {                     name    "RS_objprop_mb_points"                     label   "Enable Instances/Particles Motion Blur"                     type    toggle                     default { "1" }                 }                 parm {                     name    "RS_objprop_mb_def_use_v"                     label   "Mesh Deformations Blur From Velocity Attribute"                     type    toggle                     default { "0" }                 }                 parm {                     name    "RS_objprop_mb_v_attr"                     label   "Velocity Point Attribute"                     type    string                     default { "v" }                 }                 parm {                     name    "RS_objprop_mb_deformSteps"                     label   "Deform./Particles Steps"                     type    ordinal                     default { "0" }                     menu {                         "-1"    "Auto"                         "2"     "2 steps"                         "3"     "3 steps"                         "5"     "5 steps"                         "9"     "9 steps"                         "17"    "17 steps"                     }                 }                 parm {                     name    "RS_objprop_mb_fd_scale"                     label   "Frame Duration Scale"                     type    float                     default { "1" }                     range   { 0 1 }                 }                 parm {                     name    "RS_objprop_mb_offset"                     label   "Shutter Center Offset"                     type    float                     default { "0" }                     range   { -1 1 }                 }                 parm {                     name    "RS_objpro_sep0c"                     label   "RS_objpro_sep0c"                     type    separator                     default { "" }                 }                 parm {                     name    "RS_objprop_renderSOPsubnets"                     label   "Render the OBJ nodes inside OBJ/SOP subnets"                     type    toggle                     default { "1" }                 }                 parm {                     name    "RS_objprop_disableProc"                     label   "Disable Redshift Procedurals"                     type    toggle                     default { "0" }                 }             }              group {                 name    "RS_campropshapes_switcher_1"                 label   "Primitive Tessellation"                  parm {                     name    "RS_objprop_tess_enable"                     label   "Tessellate primitives"                     type    toggle                     default { "0" }                 }                 parm {                     name    "RS_objprop_tess_u"                     label   "U subdivisions"                     type    integer                     default { "1" }                     disablewhen "{ RS_objprop_tess_enable == 0 }"                     range   { 0! 16! }                 }                 parm {                     name    "RS_objprop_tess_v"                     label   "V subdivisions"                     type    integer                     default { "1" }                     disablewhen "{ RS_objprop_tess_enable == 0 }"                     range   { 0! 16! }                 }                 parm {                     name    "RS_objprop_tess_trim"                     label   "Trimming subdivisions"                     type    integer                     default { "1" }                     disablewhen "{ RS_objprop_tess_enable == 0 }"                     range   { 0! 16! }                 }             }              group {                 name    "RS_campropshapes_switcher_2"                 label   "Instancing"                  parm {                     name    "RS_objprop_inst_mode"                     label   "Instancing Using"                     type    ordinal                     default { "1" }                     menu {                         "insInstances"      "Redshift Instances"                         "insPointClouds"    "Redshift Point Clouds"                     }                 }                 parm {                     name    "RS_objprop_inst_mb"                     label   "Instances/Particles Motion Blur"                     type    ordinal                     default { "1" }                     menu {                         "insMBVectors"  "Compute sub-frame geometry (deformation)"                         "insMBFull"     "Use point velocity attribute"                     }                 }                 parm {                     name    "RS_objprop_inst_lightShader"                     label   "Lights Instancing"                     type    ordinal                     default { "1" }                     menu {                         "insLightsNotShared"    "Attributes support using individual shaders"                         "insLightsShared"       "Using a common shared shader"                     }                 }                 parm {                     name    "RS_objprop_inst_universalIF"                     label   "\'instancefile\' Mode"                     type    ordinal                     default { "0" }                     menu {                         "0" "Instance Redshift Proxy Objects"                         "1" "Instance Houdini Compatible Objects"                     }                 }                 parm {                     name    "RS_objprop_inst_ignorePivot"                     label   "Ignore Pivot Point Attribute"                     type    toggle                     default { "0" }                 }                 parm {                     name    "RS_objprop_inst_fileOverride"                     label   "Override \'instancefile\' Proxy Materials From Scene Materials"                     type    toggle                     default { "0" }                 }                 parm {                     name    "RS_objprop_inst_packed"                     label   "Process \'instance\' and \'instancefile\' Attrs. Inside Packed Primitives"                     type    toggle                     default { "0" }                 }                 parm {                     name    "RS_objprop_inst_PackedPrimInstancing"                     label   "Instance SOP Level Packed Primitives"                     type    toggle                     default { "0" }                 }                 parm {                     name    "RS_objprop_inst_subnetInstancing"                     label   "Instance Subnets"                     type    toggle                     default { "0" }                 }             }              group {                 name    "RS_campropshapes_switcher_3"                 label   "Attributes"                  parm {                     name    "RS_objprop_attr_auto"                     label   "Enable Automatic Attributes Extraction"                     type    toggle                     default { "1" }                 }                 parm {                     name    "RS_objprop_attr_vertex"                     label   "Vertex Attributes"                     type    string                     default { "" }                     disablewhen "{ RS_objprop_attr_auto == 1 }"                     menutoggle {                         [ "result = []                                                           " ]                         [ "geo = hou.pwd().renderNode().geometry()  " ]                         [ "for attr in geo.vertexAttribs():         " ]                         [ "        result.append(attr.name())               " ]                         [ "        result.append(attr.name())               " ]                         [ "return result                                                    " ]                         language python                     }                 }                 parm {                     name    "RS_objprop_attr_points"                     label   "Point Attributes"                     type    string                     default { "" }                     disablewhen "{ RS_objprop_attr_auto == 1 }"                     menutoggle {                         [ "result = []                                                            " ]                         [ "geo = hou.pwd().renderNode().geometry()  " ]                         [ "for attr in geo.pointAttribs():                  " ]                         [ "        result.append(attr.name())               " ]                         [ "        result.append(attr.name())               " ]                         [ "return result                                                    " ]                         language python                     }                 }                 parm {                     name    "RS_objprop_attr_primitives"                     label   "Strand Attributes"                     type    string                     default { "" }                     disablewhen "{ RS_objprop_attr_auto == 1 }"                     menutoggle {                         [ "result = []                                                               " ]                         [ "geo = hou.pwd().renderNode().geometry()  " ]                         [ "for attr in geo.primAttribs():                   " ]                         [ "        result.append(attr.name())               " ]                         [ "        result.append(attr.name())               " ]                         [ "return result                                                    " ]                         language python                     }                 }                 parm {                     name    "RS_objprop_attr_detail"                     label   "Object Attributes"                     type    string                     default { "" }                     disablewhen "{ RS_objprop_attr_auto == 1 }"                     menutoggle {                         [ "result = []                                                           " ]                         [ "geo = hou.pwd().renderNode().geometry()  " ]                         [ "for attr in geo.globalAttribs():         " ]                         [ "        result.append(attr.name())               " ]                         [ "        result.append(attr.name())               " ]                         [ "return result                                                    " ]                         language python                     }                 }                 parm {                     name    "RS_objprop_attr_detail_sep"                     label   "RS_objprop_attr_detail_sep"                     type    separator                     default { "" }                 }                 parm {                     name    "RS_objprop_pckattr_promotion"                     label   "Enable Packed Geo Point Attributes Promotion"                     type    toggle                     default { "1" }                 }                 parm {                     name    "RS_objprop_pckattr_replace"                     label   "Replace Attributes"                     type    string                     default { "Cd" }                     disablewhen "{ RS_objprop_pckattr_promotion == 0 }"                     menutoggle {                         [ "result = []                                                          " ]                         [ "geo = hou.pwd().renderNode().geometry()  " ]                         [ "for attr in geo.pointAttribs():                  " ]                         [ "        result.append(attr.name())               " ]                         [ "        result.append(attr.name())               " ]                         [ "return result                                                    " ]                         language python                     }                 }                 parm {                     name    "RS_objprop_pckattr_mult"                     label   "Mult. Attributes"                     type    string                     default { "scale pscale" }                     disablewhen "{ RS_objprop_pckattr_promotion == 0 }"                     menutoggle {                         [ "result = []                                                               " ]                         [ "geo = hou.pwd().renderNode().geometry()  " ]                         [ "for attr in geo.pointAttribs():                  " ]                         [ "        result.append(attr.name())               " ]                         [ "        result.append(attr.name())               " ]                         [ "return result                                                    " ]                         language python                     }                 }                 parm {                     name    "RS_objprop_pckattr_add"                     label   "Add Attributes"                     type    string                     default { "v" }                     disablewhen "{ RS_objprop_pckattr_promotion == 0 }"                     menutoggle {                         [ "result = []                                                             " ]                         [ "geo = hou.pwd().renderNode().geometry()  " ]                         [ "for attr in geo.pointAttribs():                  " ]                         [ "        result.append(attr.name())               " ]                         [ "        result.append(attr.name())               " ]                         [ "return result                                                    " ]                         language python                     }                 }             }              group {                 name    "RS_campropshapes_switcher_4"                 label   "Tracesets"                  parm {                     name    "RS_objprop_tracesets_enabled"                     label   "Enable Tracesets"                     type    toggle                     default { "0" }                 }                 parm {                     name    "RS_objprop_tracesets_reflection"                     label   "Reflections Enabled For"                     type    oplist                     default { "*" }                     disablewhen "{ RS_objprop_tracesets_enabled == 0 }"                     parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                     parmtag { "oprelative" "/obj" }                 }                 parm {                     name    "RS_objprop_tracesets_refraction"                     label   "Refractions Enabled For"                     type    oplist                     default { "*" }                     disablewhen "{ RS_objprop_tracesets_enabled == 0 }"                     parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                     parmtag { "oprelative" "/obj" }                 }                 parm {                     name    "RS_objprop_tracesets_sss"                     label   "SSS Enabled For"                     type    oplist                     invisible                     default { "*" }                     disablewhen "{ RS_objprop_tracesets_enabled == 0 }"                     parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                     parmtag { "oprelative" "/obj" }                 }             }              group {                 name    "RS_campropshapes_switcher_5"                 label   "IPR"                  parm {                     name    "RS_objprop_ipr_forceMeshUpdate"                     label   "IPR force the mesh updating of OBJ nodes inside subnets"                     type    toggle                     default { "0" }                 }             }          }          group {             name    "RS_objprop_switcher_1"             label   "Proxy"              parm {                 name    "RS_objpro_label5"                 label   " "                 type    label                 default { "" }             }             parm {                 name    "RS_objprop_proxy_enable"                 label   "Enable Proxy File"                 type    toggle                 default { "0" }                 parmtag { "script_callback" "nodes = hou.pwd().children()                                               \\nfor child in nodes:                                                                  \\n    if child.type().name() == \'redshift_proxySOP\': \\n         child.cook(True)                                                    \\n" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "RS_objprop_proxy_file"                 label   "Proxy Filename"                 type    file                 default { "$HIP/filename.$F4.rs" }                 disablewhen "{ RS_objprop_proxy_enable == 0 }"                 parmtag { "script_callback" "nodes = hou.pwd().children()                                               \\nfor child in nodes:                                                                  \\n    if child.type().name() == \'redshift_proxySOP\': \\n         child.cook(True)                                                    \\n" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "RS_objpro_sep5a"                 label   "RS_objpro_sep5a"                 type    separator                 default { "" }             }             parm {                 name    "RS_objprop_proxy_preview"                 label   "Display Mode"                 type    ordinal                 default { "1" }                 disablewhen "{ RS_objprop_proxy_enable == 0 }"                 menu {                     "proxyPrevNone"     "None"                     "proxyPrevBB"       "Bounding Box"                     "proxyPrevSolid"    "Mesh"                     "proxyPrevPoints"   "Points"                 }                 parmtag { "script_callback" "nodes = hou.pwd().children()                                         \\nfor child in nodes:                                                                  \\n    if child.type().name() == \'redshift_proxySOP\': \\n         child.cook(True)                                                    \\n" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "RS_objprop_proxy_prevPercent"                 label   "Display Percentage"                 type    float                 default { "1" }                 disablewhen "{ RS_objprop_proxy_enable == 0 } { RS_objprop_proxy_preview == proxyPrevNone } { RS_objprop_proxy_preview == proxyPrevBB }"                 range   { 0! 1! }                 parmtag { "script_callback" "nodes = hou.pwd().children()                                          \\nfor child in nodes:                                                                  \\n    if child.type().name() == \'redshift_proxySOP\': \\n         child.cook(True)                                                    \\n" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "RS_objprop_proxy_prevLines"                 label   "Display Lines"                 type    toggle                 default { "1" }                 disablewhen "{ RS_objprop_proxy_enable == 0 } { RS_objprop_proxy_preview == proxyPrevNone } { RS_objprop_proxy_preview == proxyPrevBB }"                 parmtag { "script_callback" "nodes = hou.pwd().children()                                          \\nfor child in nodes:                                                                  \\n    if child.type().name() == \'redshift_proxySOP\': \\n         child.cook(True)                                                    \\n" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "RS_objprop_proxy_prevAnimated"                 label   "Animated Preview"                 type    toggle                 default { "0" }                 disablewhen "{ RS_objprop_proxy_enable == 0 } { RS_objprop_proxy_preview == proxyPrevNone }"                 parmtag { "script_callback" "nodes = hou.pwd().children()                                                \\nfor child in nodes:                                                                  \\n    if child.type().name() == \'redshift_proxySOP\': \\n         child.cook(True)                                                    \\n" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "RS_objpro_sep5b"                 label   "RS_objpro_sep5b"                 type    separator                 default { "" }             }             parm {                 name    "RS_objprop_proxy_materials"                 label   "Proxy Materials"                 type    ordinal                 default { "0" }                 disablewhen "{ RS_objprop_proxy_enable == 0 }"                 menu {                     "proxyMatProxy"     "From Proxy"                     "proxyMatObject"    "From OBJ Node"                     "proxyMatOverride"  "Full Override"                     "proxyMatOvrList"   "List Override"                     "proxyMatOvrScene"  "From Scene Materials"                 }             }             parm {                 name    "RS_objprop_proxy_override"                 label   "Full Override Material"                 type    oppath                 default { "" }                 disablewhen "{ RS_objprop_proxy_enable == 0 } { RS_objprop_proxy_materials != proxyMatOverride }"                 parmtag { "opfilter" "!!VOP!!" }                 parmtag { "oprelative" "." }             }             multiparm {                 name    "RS_objprop_proxy_overrideList"                 label    "Material Override List"                  parm {                     name    "RS_objprop_proxy_overrideListFrom_#"                     label   "Replace Material"                     type    string                     joinnext                     default { "" }                     disablewhen "{ RS_objprop_proxy_enable == 0 } { RS_objprop_proxy_materials != proxyMatOvrList }"                     menureplace {                         [ "set directory = `run(\\"pwd\\")`                                                                             " ]                         [ "set command = `\\"Redshift_getProxyMaterials -n $directory \\"`       " ]                         [ "set materials = `run($command)`                                                                             " ]                         [ "echo $materials                                                                                                          " ]                     }                 }                 parm {                     name    "RS_objprop_proxy_overrideListTo_#"                     label   "With"                     type    oppath                     default { "" }                     disablewhen "{ RS_objprop_proxy_enable == 0 } { RS_objprop_proxy_materials != proxyMatOvrList }"                     parmtag { "opfilter" "!!VOP!!" }                     parmtag { "oprelative" "." }                 }             }              parm {                 name    "RS_objpro_sep5c"                 label   "RS_objpro_sep5c"                 type    separator                 default { "" }             }             parm {                 name    "RS_objprop_proxy_elements_mesh"                 label   "Exclude Meshes"                 type    string                 default { "" }                 menutoggle {                     [ "set directory = `run(\\"pwd\\")`                                                                           " ]                     [ "set command = `\\"Redshift_getProxyElements -n $directory -t mesh\\"` " ]                     [ "set elements = `run($command)`                                                                              " ]                     [ "echo $elements                                                                                                               " ]                 }             }             parm {                 name    "RS_objprop_proxy_elements_volume"                 label   "Exclude Volumes"                 type    string                 default { "" }                 menutoggle {                     [ "set directory = `run(\\"pwd\\")`                                                                          " ]                     [ "set command = `\\"Redshift_getProxyElements -n $directory -t volume\\"` " ]                     [ "set elements = `run($command)`                                                                            " ]                     [ "echo $elements                                                                                                               " ]                 }             }             parm {                 name    "RS_objprop_proxy_elements_light"                 label   "Exclude Lights"                 type    string                 default { "" }                 menutoggle {                     [ "set directory = `run(\\"pwd\\")`                                                                            " ]                     [ "set command = `\\"Redshift_getProxyElements -n $directory -t light\\"` " ]                     [ "set elements = `run($command)`                                                                             " ]                     [ "echo $elements                                                                                                               " ]                 }             }             parm {                 name    "RS_objprop_proxy_elements_proxy"                 label   "Exclude Proxies"                 type    string                 default { "" }                 menutoggle {                     [ "set directory = `run(\\"pwd\\")`                                                                           " ]                     [ "set command = `\\"Redshift_getProxyElements -n $directory -t proxy\\"` " ]                     [ "set elements = `run($command)`                                                                             " ]                     [ "echo $elements                                                                                                               " ]                 }             }             parm {                 name    "RS_objpro_sep5d"                 label   "RS_objpro_sep5d"                 type    separator                 default { "" }             }             parm {                 name    "RS_objprop_proxy_ovrID"                 label   "Override Object ID"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_objprop_proxy_ovrVis"                 label   "Override Visibility & Matte"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_objprop_proxy_ovrTess"                 label   "Override Tessellation & Displacement"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_objprop_proxy_ovrTraceS"                 label   "Override Tracesets"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_objprop_proxy_ovrUserData"                 label   "Override User Data"                 type    toggle                 default { "0" }             }         }          group {             name    "RS_objprop_switcher_2"             label   "Visibility"              parm {                 name    "RS_objpro_label1o"                 label   " "                 type    label                 default { "" }             }             parm {                 name    "MESHFLAG_PRIMARYRAYVISIBLE"                 label   "Primary Ray Visible"                 type    toggle                 default { "1" }             }             parm {                 name    "MESHFLAG_SECONDARYRAYVISIBLE"                 label   "Seconday Ray Visible"                 type    toggle                 default { "1" }             }             parm {                 name    "RS_objpro_sep1a"                 label   "RS_objpro_sep1a"                 type    separator                 default { "" }             }             parm {                 name    "MESHFLAG_SHADOWCASTER"                 label   "Casts Shadows"                 type    toggle                 default { "1" }             }             parm {                 name    "MESHFLAG_SHADOWRECEIVER"                 label   "Receives Shadows (not affect volumes)"                 type    toggle                 default { "1" }             }             parm {                 name    "MESHFLAG_NOSELFSHADOW"                 label   "Self-Shadows"                 type    toggle                 default { "1" }             }             parm {                 name    "MESHFLAG_AOCASTER"                 label   "Cast AO"                 type    toggle                 default { "1" }             }             parm {                 name    "RS_objpro_sep1b"                 label   "RS_objpro_sep1b"                 type    separator                 default { "" }             }             parm {                 name    "MESHFLAG_REFLECTIONVISIBLE"                 label   "Visible in Reflections"                 type    toggle                 default { "1" }                 disablewhen "{ MESHFLAG_SECONDARYRAYVISIBLE == 0 }"             }             parm {                 name    "MESHFLAG_REFRACTIONVISIBLE"                 label   "Visible in Refractions"                 type    toggle                 default { "1" }                 disablewhen "{ MESHFLAG_SECONDARYRAYVISIBLE == 0 }"             }             parm {                 name    "MESHFLAG_REFLECTIONCASTER"                 label   "Casts Reflections"                 type    toggle                 default { "1" }                 disablewhen "{ MESHFLAG_SECONDARYRAYVISIBLE == 0 }"             }             parm {                 name    "MESHFLAG_REFRACTIONCASTER"                 label   "Casts Refractions"                 type    toggle                 default { "1" }                 disablewhen "{ MESHFLAG_SECONDARYRAYVISIBLE == 0 }"             }             parm {                 name    "RS_objpro_sep1c"                 label   "RS_objpro_sep1c"                 type    separator                 default { "" }             }             parm {                 name    "MESHFLAG_FGVISIBLE"                 label   "Visible to GI"                 type    toggle                 default { "1" }                 disablewhen "{ MESHFLAG_SECONDARYRAYVISIBLE == 0 }"             }             parm {                 name    "MESHFLAG_GIVISIBLE"                 label   "Visible to GI Photons"                 type    toggle                 invisible                 default { "1" }             }             parm {                 name    "MESHFLAG_CAUSTICVISIBLE"                 label   "Visible to Caustics Photons"                 type    toggle                 default { "1" }                 disablewhen "{ MESHFLAG_SECONDARYRAYVISIBLE == 0 }"             }             parm {                 name    "RS_objpro_sep1d"                 label   "RS_objpro_sep1d"                 type    separator                 default { "" }             }             parm {                 name    "MESHFLAG_FGCASTER"                 label   "Receives GI"                 type    toggle                 default { "1" }                 disablewhen "{ MESHFLAG_SECONDARYRAYVISIBLE == 0 }"             }             parm {                 name    "MESHFLAG_FORCEBRUTEFORCEGI"                 label   "Force Brute-Force GI"                 type    toggle                 default { "0" }                 disablewhen "{ MESHFLAG_SECONDARYRAYVISIBLE == 0 }"             }             parm {                 name    "MESHFLAG_GICASTER"                 label   "Casts GI Photons"                 type    toggle                 invisible                 default { "1" }             }             parm {                 name    "MESHFLAG_CAUSTICCASTER"                 label   "Casts Caustics Photons"                 type    toggle                 default { "0" }             }             parm {                 name    "MESHFLAG_CAUSTICSRECEIVER"                 label   "Receives Caustics Photons"                 type    toggle                 default { "1" }             }         }          group {             name    "RS_objprop_switcher_3"             label   "Tessellation / Displacement"              parm {                 name    "RS_objpro_label2"                 label   " "                 type    label                 default { "" }             }             parm {                 name    "RS_objprop_rstess_enable"                 label   "Enable Tessellation"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_objprop_rstess_rule"                 label   "Subdivision Rule"                 type    ordinal                 default { "0" }                 disablewhen "{ RS_objprop_rstess_enable == 0 }"                 menu {                     "ccLoop"    "Catmull-Clark + Loop"                     "ccOnly"    "Catmull-Clark Only"                 }             }             parm {                 name    "RS_objprop_rstess_ssadaptive"                 label   "Screen Space Adaptive"                 type    toggle                 default { "1" }                 disablewhen "{ RS_objprop_rstess_enable == 0 }"             }             parm {                 name    "RS_objprop_rstess_smoothsub"                 label   "Smooth subdivision"                 type    toggle                 default { "1" }                 disablewhen "{ RS_objprop_rstess_enable == 0 }"             }             parm {                 name    "RS_objprop_rstess_triQuads"                 label   "Triangulate Quads"                 type    toggle                 default { "0" }                 disablewhen "{ RS_objprop_rstess_enable == 0 }"             }             parm {                 name    "RS_objprop_rstess_melenght"                 label   "Minimum Edge Length"                 type    float                 default { "4" }                 disablewhen "{ RS_objprop_rstess_enable == 0 }"                 range   { 0! 32 }             }             parm {                 name    "RS_objprop_rstess_maxsubd"                 label   "Maximum Subdivisions"                 type    integer                 default { "6" }                 disablewhen "{ RS_objprop_rstess_enable == 0 }"                 range   { 0! 16 }             }             parm {                 name    "RS_objprop_rstess_ooftf"                 label   "Out of Frustum Tessellation Factor"                 type    float                 default { "4" }                 disablewhen "{ RS_objprop_rstess_enable == 0 }"                 range   { 0! 32 }             }             parm {                 name    "RS_objprop_rstess_looft"                 label   "Limit Out of Frust. Tessellation"                 type    toggle                 default { "0" }                 disablewhen "{ RS_objprop_rstess_enable == 0 }"             }             parm {                 name    "RS_objprop_rstess_looftSubd"                 label   "Max Out of Frust. Subdivs"                 type    integer                 default { "6" }                 disablewhen "{ RS_objprop_rstess_enable == 0 } { RS_objprop_rstess_looft == 0 }"                 range   { 0! 16 }             }             parm {                 name    "RS_objprop_rstess_smooth"                 label   "Disable UV\'s Smoothing "                 type    toggle                 default { "0" }                 disablewhen "{ RS_objprop_rstess_enable == 0 }"             }             parm {                 name    "RS_objprop_rstess_smoothBound"                 label   "Smooth UV Boundaries"                 type    toggle                 default { "1" }                 disablewhen "{ RS_objprop_rstess_enable == 0 }"             }             parm {                 name    "RS_objpro_sepTessellationDisplacement"                 label   "RS_objpro_sepTessellationDisplacement"                 type    separator                 default { "" }             }             parm {                 name    "RS_objpro_label3"                 label   " "                 type    label                 default { "" }             }             parm {                 name    "RS_objprop_displace_enable"                 label   "Enable Displacement"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_objprop_displace_max"                 label   "Maximum Displacement"                 type    log                 default { "1" }                 disablewhen "{ RS_objprop_displace_enable == 0 }"                 range   { 0! 1000 }             }             parm {                 name    "RS_objprop_displace_scale"                 label   "Displacement Scale"                 type    log                 default { "1" }                 disablewhen "{ RS_objprop_displace_enable == 0 }"                 range   { 0! 1000 }             }             parm {                 name    "RS_objprop_displace_autob"                 label   "Enable Auto Bump Mapping"                 type    toggle                 default { "1" }                 disablewhen "{ RS_objprop_displace_enable == 0 }"             }         }          group {             name    "RS_objprop_switcher_4"             label   "Matte"              parm {                 name    "RS_objpro_label4"                 label   " "                 type    label                 default { "" }             }             parm {                 name    "RS_objprop_matte_enable"                 label   "Matte Enable"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_objprop_matte_showbackg"                 label   "Show Background"                 type    toggle                 default { "1" }                 disablewhen "{ RS_objprop_matte_enable == 0 }"             }             parm {                 name    "RS_objprop_matte_applysec"                 label   "Apply to Second Rays"                 type    toggle                 default { "0" }                 disablewhen "{ RS_objprop_matte_enable == 0 }"             }             parm {                 name    "RS_objprop_matte_abyml"                 label   "Affected By Matte Lights"                 type    toggle                 default { "0" }                 disablewhen "{ RS_objprop_matte_enable == 0 }"             }             parm {                 name    "RS_objprop_matte_includePM"                 label   "Include In Puzzle-Mattes"                 type    toggle                 default { "0" }                 disablewhen "{ RS_objprop_matte_enable == 0 }"             }             parm {                 name    "RS_objprop_matte_alpha"                 label   "Alpha"                 type    float                 default { "1" }                 disablewhen "{ RS_objprop_matte_enable == 0 }"                 range   { 0! 1! }             }             parm {                 name    "RS_objprop_matte_reflscale"                 label   "Reflection Scale"                 type    float                 default { "0" }                 disablewhen "{ RS_objprop_matte_enable == 0 }"                 range   { 0! 1! }             }             parm {                 name    "RS_objprop_matte_refrscale"                 label   "Refraction Scale"                 type    float                 default { "0" }                 disablewhen "{ RS_objprop_matte_enable == 0 }"                 range   { 0! 1! }             }             parm {                 name    "RS_objprop_matte_diffscale"                 label   "Diffuse Scale"                 type    float                 default { "0" }                 disablewhen "{ RS_objprop_matte_enable == 0 }"                 range   { 0! 1! }             }             parm {                 name    "RS_objpro_sep4b"                 label   "RS_objpro_sep4b"                 type    separator                 default { "" }             }             parm {                 name    "RS_objprop_matte_shadowenable"                 label   "Shadow Enable"                 type    toggle                 default { "0" }                 disablewhen "{ RS_objprop_matte_enable == 0 }"             }             parm {                 name    "RS_objprop_matte_shadowsFromM"                 label   "Receive Shadows From Mattes"                 type    toggle                 default { "1" }                 disablewhen "{ RS_objprop_matte_enable == 0 } { RS_objprop_matte_shadowenable == 0 }"             }             parm {                 name    "RS_objprop_matte_shadowalpha"                 label   "Affect Alpha"                 type    toggle                 default { "0" }                 disablewhen "{ RS_objprop_matte_enable == 0 } { RS_objprop_matte_shadowenable == 0 }"             }             parm {                 name    "RS_objprop_matte_shadowcolor"                 label   "Color"                 type    color                 size    3                 default { "0" "0" "0" }                 disablewhen "{ RS_objprop_matte_enable == 0 } { RS_objprop_matte_shadowenable == 0 }"                 range   { 0 1 }             }             parm {                 name    "RS_objprop_matte_shadowtrans"                 label   "Transparency"                 type    float                 default { "0" }                 disablewhen "{ RS_objprop_matte_enable == 0 } { RS_objprop_matte_shadowenable == 0 }"                 range   { 0! 1! }             }         }          group {             name    "RS_objprop_switcher_5"             label   "Strands"              parm {                 name    "RS_objpro_label6"                 label   " "                 type    label                 default { "" }             }             parm {                 name    "RS_objprop_strands_enable"                 label   "Render Object as Strands"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_objprop_strands_type"                 label   "Strand Type"                 type    ordinal                 default { "4" }                 disablewhen "{ RS_objprop_strands_enable == 0 }"                 menu {                     "RS_STRAND_SHAPE_BOX"       "Box"                     "RS_STRAND_SHAPE_CYLINDER"  "Cylinder"                     "RS_STRAND_SHAPE_CAPSULE"   "Capsule"                     "RS_STRAND_SHAPE_CONE"      "Cone"                     "RS_STRAND_SHAPE_STRIP"     "Strip"                 }             }             parm {                 name    "RS_objprop_strands_maxSubd"                 label   "Max. Tessellation Subdivisions"                 type    integer                 default { "8" }                 disablewhen "{ RS_objprop_strands_enable == 0 }"                 range   { 0! 16 }             }             parm {                 name    "RS_objprop_strands_scale"                 label   "Default Scale"                 type    float                 default { "0.01" }                 disablewhen "{ RS_objprop_strands_enable == 0 }"                 range   { 0! 2 }             }             parm {                 name    "RS_objprop_strands_scaleMult"                 label   "Global Scale Multiplier"                 type    float                 default { "1" }                 disablewhen "{ RS_objprop_strands_enable == 0 }"                 range   { 0! 10 }             }             parm {                 name    "RS_objprop_strands_ignorePScale"                 label   "Ignore the \'pscale\' Attribute"                 type    toggle                 default { "0" }                 disablewhen "{ RS_objprop_strands_enable == 0 }"             }             parm {                 name    "RS_objprop_strands_useCamera"                 label   "Screen-space Adaptive Tesselaltion"                 type    toggle                 default { "1" }                 disablewhen "{ RS_objprop_strands_enable == 0 }"             }         }          group {             name    "RS_objprop_switcher_6"             label   "Particles"              parm {                 name    "RS_objpro_label10"                 label   " "                 type    label                 default { "" }             }             parm {                 name    "RS_objprop_particles_enable"                 label   "Render Object as Particles"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_objprop_particles_ignoreScale"                 label   "Ignore Scale Attributes"                 type    toggle                 default { "0" }                 disablewhen "{ RS_objprop_particles_enable == 0 }"             }             parm {                 name    "RS_objprop_particles_scale"                 label   "Default Scale"                 type    float                 default { "0.01" }                 disablewhen "{ RS_objprop_particles_enable == 0 } { RS_objprop_particles_ignoreScale == 0 }"                 range   { 0! 2 }             }             parm {                 name    "RS_objprop_particles_scaleMult"                 label   "Global Scale Multiplier"                 type    float                 default { "1" }                 disablewhen "{ RS_objprop_particles_enable == 0 }"                 range   { 0! 10 }             }         }          group {             name    "RS_objprop_switcher_7"             label   "Volume"              parm {                 name    "RS_objpro_label7"                 label   " "                 type    label                 default { "" }             }             parm {                 name    "RS_objprop_volume_enable"                 label   "Volume Enable"                 type    toggle                 invisible                 default { "0" }             }             parm {                 name    "RS_objprop_volume_type"                 label   "Volume Type"                 type    ordinal                 invisible                 default { "0" }                 menu {                     "vOpenVDB"          "OpenVDB File"                     "vHoudiniVolume"    "Volume/VDB Houdini Primitive"                 }             }             parm {                 name    "RS_objprop_volume_filterN"                 label   "Filter Negative Voxels"                 type    toggle                 default { "1" }             }             parm {                 name    "RS_objprop_volume_filterDeg"                 label   "Filter Degenerate Voxels"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_objprop_volume_filterDegThr"                 label   "Degenerate Voxels Threshold"                 type    float                 default { "10" }                 disablewhen "{ RS_objprop_volume_filterDeg == 0 }"                 range   { 1! 100 }             }             parm {                 name    "RS_objprop_volume_cleanBackg"                 label   "Color Channels Clean Background"                 type    toggle                 default { "1" }             }             parm {                 name    "RS_objprop_volume_v"                 label   "Use Velocity Grids"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_objprop_volume_vx"                 label   "Velocity X Grid"                 type    string                 default { "vel.x" }                 disablewhen "{ RS_objprop_volume_v == 0 }"             }             parm {                 name    "RS_objprop_volume_vy"                 label   "Velocity Y Grid"                 type    string                 default { "vel.y" }                 disablewhen "{ RS_objprop_volume_v == 0 }"             }             parm {                 name    "RS_objprop_volume_vz"                 label   "Velocity Z Grid"                 type    string                 default { "vel.z" }                 disablewhen "{ RS_objprop_volume_v == 0 }"             }             parm {                 name    "RS_objprop_volume_vs"                 label   "Velocity Grid Scale"                 type    float                 default { "1" }                 disablewhen "{ RS_objprop_volume_v == 0 }"                 range   { 0! 1 }             }             parm {                 name    "RS_objpro_last"                 label   "RS_objpro_last"                 type    integer                 invisible                 default { "0" }                 range   { 0 10 }             }             parm {                 name    "childcomp"                 baseparm                 label   "Child Compensation"                 invisible                 export  none             }             parm {                 name    "lookupobjpath"                 baseparm                 label   "Look Up Object"                 invisible                 export  none             }             parm {                 name    "pr"                 baseparm                 label   "Pivot Rotate"                 invisible                 export  none             }             parm {                 name    "constraints_on"                 baseparm                 label   "Enable Constraints"                 invisible                 export  none             }             parm {                 name    "constraints_path"                 baseparm                 label   "Constraints"                 invisible                 export  none             }         }      }  ' $_obj_camera_plane
opparm $_obj_camera_plane  RS_objprop_proxy_overrideList ( 0 )
chblockbegin
chadd -t 40 40 $_obj_camera_plane space_
chkey -t 40 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch(\'space\')==2, strcmp(opinputpath(\'.\', 0), \'\'), ch(\'space\') )' $_obj_camera_plane/space_
chadd -t 39.960000000000001 39.960000000000001 $_obj_camera_plane camera
chkey -t 39.960000000000001 -v 0 -m 0 -a 0.33333333333333331 -A 0.33333333333333331 -T a  -o mM  -F '"/obj/"+chsop("/obj/camSwitcher/current_camera")' -l p $_obj_camera_plane/camera
chadd -t 40 40 $_obj_camera_plane fr_currentframe
chkey -t 40 -v 0 -m 0 -a 0 -A 0 -T a  -F 'hou.pwd().node(\'Camera_Plane/camera_plane_ql1\').hdaModule().framemap(hou.pwd(), prefix=\'fr_\')' -l p $_obj_camera_plane/fr_currentframe
chadd -t 40 40 $_obj_camera_plane fr_texture
chkey -t 40 -v 0 -m 0 -a 0 -A 0 -T a  -F 'hou.pwd().node(\'Camera_Plane/camera_plane_ql1\').hdaModule().framemap(hou.pwd(), prefix=\'fr_\', txparm=\'texture\')' -l p $_obj_camera_plane/fr_texture
chblockend
opset -S on $_obj_camera_plane
opparm $_obj_camera_plane camera ( camera ) plane_distance ( 3 ) material_mode ( 1 ) texture ( '`strreplace(strreplace(chs(strcat(chs("camera"), "/vm_background")), "/half_ud/", "/half_ud_alpha/"), ".jpg", ".png")' ) fr_range ( 1001 1197 ) fr_startframeat ( 1001 ) renderable ( off ) import_file_path ( //ditto/jobs/adidas_multisport_copa_8192/films/anthem/shots/0000/publish/tracking/stadium_a/Object_obj~camera_0640_plane_v001.node ) RS_objprop_switcher ( 2 2 2 2 2 2 2 2 ) MESHFLAG_PRIMARYRAYVISIBLE ( off ) MESHFLAG_SECONDARYRAYVISIBLE ( off ) MESHFLAG_SHADOWCASTER ( off ) MESHFLAG_SHADOWRECEIVER ( off ) MESHFLAG_NOSELFSHADOW ( off ) MESHFLAG_AOCASTER ( off ) MESHFLAG_REFLECTIONVISIBLE ( off ) MESHFLAG_REFRACTIONVISIBLE ( off ) MESHFLAG_REFLECTIONCASTER ( off ) MESHFLAG_REFRACTIONCASTER ( off ) MESHFLAG_FGVISIBLE ( off ) MESHFLAG_CAUSTICVISIBLE ( off ) MESHFLAG_FGCASTER ( off ) MESHFLAG_CAUSTICSRECEIVER ( off )
chlock $_obj_camera_plane +texture
chautoscope $_obj_camera_plane +tx +ty +tz +rx +ry +rz +sx +sy +sz +camera +texture
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_camera_plane
opexprlanguage -s hscript $_obj_camera_plane
opuserdata -n '___Version___' -v '' $_obj_camera_plane
opset -p on $_obj_camera_plane

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_camera_plane
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_camera_plane
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>
</shelfDocument>
