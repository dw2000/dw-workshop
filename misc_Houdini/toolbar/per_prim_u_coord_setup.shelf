<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <tool name="get_prim_u" label="Per-primitive u coord" icon="SOP_fit">
    <toolMenuContext name="network">
      <contextOpType>Sop/line</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'attribvop' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_swarm_0036_0050_calm_line1 (Sop/line)
set _obj_swarm_0036_0050_calm_line1 = `run("opadd -e -n -v line line1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_swarm_0036_0050_calm_line1
opparm -V 19.5.368 $_obj_swarm_0036_0050_calm_line1 dir ( 0 0 1 ) points ( 10 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_swarm_0036_0050_calm_line1
opexprlanguage -s hscript $_obj_swarm_0036_0050_calm_line1
opuserdata -n '___Version___' -v '19.5.368' $_obj_swarm_0036_0050_calm_line1
opuserdata -n '___toolcount___' -v '123' $_obj_swarm_0036_0050_calm_line1
opuserdata -n '___toolid___' -v 'get_prim_u' $_obj_swarm_0036_0050_calm_line1
opset -p on $_obj_swarm_0036_0050_calm_line1
opcf $arg1

# Node $_obj_swarm_0036_0050_calm_copy1 (Sop/copyxform)
set _obj_swarm_0036_0050_calm_copy1 = `run("opadd -e -n -v copyxform copy1")`
oplocate -x `$arg2 + -8.3266726846886741e-17` -y `$arg3 + -0.8898693503399091` $_obj_swarm_0036_0050_calm_copy1
opparm -V 19.5.368 $_obj_swarm_0036_0050_calm_copy1 ncy ( 4 ) t ( 0 0.25 0 ) s ( 1 1 -1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_swarm_0036_0050_calm_copy1
opexprlanguage -s hscript $_obj_swarm_0036_0050_calm_copy1
opset -p on $_obj_swarm_0036_0050_calm_copy1
opcf $arg1

# Node $_obj_swarm_0036_0050_calm_prim_u_wrangle (Sop/attribwrangle)
set _obj_swarm_0036_0050_calm_prim_u_wrangle = `run("opadd -e -n -v attribwrangle prim_u_wrangle")`
oplocate -x `$arg2 + 1.2833241358491503` -y `$arg3 + -2.4860738649194474` $_obj_swarm_0036_0050_calm_prim_u_wrangle
opparm $_obj_swarm_0036_0050_calm_prim_u_wrangle  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_swarm_0036_0050_calm_prim_u_wrangle snippet ( 'float float_prim_vtx = vertexprimindex(0, i@vtxnum);\nfloat prim_u = float_prim_vtx / (primvertexcount(0, i@primnum) - 1); \n\n@Cd = prim_u;' )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_swarm_0036_0050_calm_prim_u_wrangle
opexprlanguage -s hscript $_obj_swarm_0036_0050_calm_prim_u_wrangle
opuserdata -n '___Version___' -v '' $_obj_swarm_0036_0050_calm_prim_u_wrangle
opuserdata -n '___toolcount___' -v '123' $_obj_swarm_0036_0050_calm_prim_u_wrangle
opuserdata -n '___toolid___' -v 'get_prim_u' $_obj_swarm_0036_0050_calm_prim_u_wrangle
opset -p on $_obj_swarm_0036_0050_calm_prim_u_wrangle
opcf $arg1

# Node $_obj_swarm_0036_0050_calm_prim_u_vop (Sop/attribvop)
set _obj_swarm_0036_0050_calm_prim_u_vop = `run("opadd -e -n -v attribvop prim_u_vop")`
oplocate -x `$arg2 + -1.1265007421419524` -y `$arg3 + -2.4850738777940506` $_obj_swarm_0036_0050_calm_prim_u_vop
opspareds '    parm {         name    "bindgroup"         baseparm         label   "Group"         export  none         bindselector uvselect "Modify Points"             "Select the points to affect and press Enter to complete."             0 1 0xffffffff 0 bindgrouptype 0     }     parm {         name    "bindgrouptype"         baseparm         label   "Group Type"         export  none     }     parm {         name    "bindclass"         baseparm         label   "Run Over"         export  none     }     parm {         name    "vex_numcount"         baseparm         label   "Number Count"         export  none     }     parm {         name    "vex_threadjobsize"         baseparm         label   "Thread Job Size"         export  none     }     group {         name    "stdswitcher3"         label   "Vex Setup"          parm {             name    "vexsrc"             baseparm             label   "Vex Source"             export  all         }         parm {             name    "shoppath"             baseparm             label   "Shop Path"             export  all         }         parm {             name    "script"             baseparm             label   "Script"             export  all         }         parm {             name    "clear"             baseparm             label   "Re-load VEX Functions"             export  all         }         parm {             name    "vexsnippet"             baseparm             label   "Snippet"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }         parm {             name    "vex_exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vop_compiler"             baseparm             label   "Compiler"             export  none         }         parm {             name    "vop_forcecompile"             baseparm             label   "Force Compile"             export  none         }         parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_multithread"             baseparm             label   "Enable Multithreading"             export  none         }     }      group {         name    "stdswitcher3_1"         label   "Attribute Bindings"          parm {             name    "vex_precision"             baseparm             label   "VEX Precision"             export  none         }         parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }     }      parm {         name    "ptnum"         label   "Point Number"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "vtxnum"         label   "Vertex Number"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "primnum"         label   "Primitive Number"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "id"         label   "Id"         type    integer         invisible         default { "-1" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "numpt"         label   "Number of Points"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "numvtx"         label   "Number of Vertices"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "numprim"         label   "Number of Prims"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "Time"         label   "Time"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "TimeInc"         label   "Time Inc"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "Frame"         label   "Frame"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "life"         label   "Life"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "age"         label   "Age"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput2"         label   "Second Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput3"         label   "Third Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput4"         label   "Fourth Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput1"         label   "First Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "uv"         label   "UV"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "P"         label   "P"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "v"         label   "Velocity"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "force"         label   "Force"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "Cd"         label   "Cd"         type    float         invisible         size    3         default { "1" "1" "1" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "N"         label   "N"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_swarm_0036_0050_calm_prim_u_vop
opparm $_obj_swarm_0036_0050_calm_prim_u_vop  bindings ( 0 ) groupbindings ( 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_swarm_0036_0050_calm_prim_u_vop
opexprlanguage -s hscript $_obj_swarm_0036_0050_calm_prim_u_vop
opuserdata -n '___Version___' -v '19.5.368' $_obj_swarm_0036_0050_calm_prim_u_vop
opuserdata -n '___toolcount___' -v '123' $_obj_swarm_0036_0050_calm_prim_u_vop
opuserdata -n '___toolid___' -v 'get_prim_u' $_obj_swarm_0036_0050_calm_prim_u_vop
opcf $_obj_swarm_0036_0050_calm_prim_u_vop

# Node $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_swarm_0036_0050_calm_prim_u_vop_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + -3.928751176470588` -y `$arg3 + 6.7740511764705875` $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopglobal1
opexprlanguage -s hscript $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopglobal1
opuserdata -n '___toolcount___' -v '123' $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopglobal1
opuserdata -n '___toolid___' -v 'get_prim_u' $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopglobal1

# Node $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_swarm_0036_0050_calm_prim_u_vop_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 7.2365129411764704` -y `$arg3 + 5.1342776470588234` $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopoutput1
opexprlanguage -s hscript $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopoutput1
opuserdata -n '___toolcount___' -v '123' $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopoutput1
opuserdata -n '___toolid___' -v 'get_prim_u' $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopoutput1

# Node $_obj_swarm_0036_0050_calm_prim_u_vop_calc_prim_u (Vop/snippet)
set _obj_swarm_0036_0050_calm_prim_u_vop_calc_prim_u = `run("opadd -e -n -v snippet calc_prim_u")`
oplocate -x `$arg2 + 2.2651202941176449` -y `$arg3 + 5.9642776769356516` $_obj_swarm_0036_0050_calm_prim_u_vop_calc_prim_u
opparm $_obj_swarm_0036_0050_calm_prim_u_vop_calc_prim_u  namenum ( 1 )
opparm -V 19.5.368 $_obj_swarm_0036_0050_calm_prim_u_vop_calc_prim_u code ( 'float float_prim_vtx = vertexprimindex(0, i@vtxnum);\n\nprim_u = float_prim_vtx / (primvertexcount(0, i@primnum) - 1); ' ) namenum ( 1 ) name1 ( prim_u )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_swarm_0036_0050_calm_prim_u_vop_calc_prim_u
opexprlanguage -s hscript $_obj_swarm_0036_0050_calm_prim_u_vop_calc_prim_u
opuserdata -n '___Version___' -v '19.5.368' $_obj_swarm_0036_0050_calm_prim_u_vop_calc_prim_u
opuserdata -n '___toolcount___' -v '123' $_obj_swarm_0036_0050_calm_prim_u_vop_calc_prim_u
opuserdata -n '___toolid___' -v 'get_prim_u' $_obj_swarm_0036_0050_calm_prim_u_vop_calc_prim_u

# Node $_obj_swarm_0036_0050_calm_prim_u_vop_const1 (Vop/constant)
set _obj_swarm_0036_0050_calm_prim_u_vop_const1 = `run("opadd -e -n -v constant const1")`
oplocate -x `$arg2 + -1.1721350000000026` -y `$arg3 + 6.0974584698071199` $_obj_swarm_0036_0050_calm_prim_u_vop_const1
opparm -V 19.5.368 $_obj_swarm_0036_0050_calm_prim_u_vop_const1 floatdef ( -1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_swarm_0036_0050_calm_prim_u_vop_const1
opexprlanguage -s hscript $_obj_swarm_0036_0050_calm_prim_u_vop_const1
opuserdata -n '___Version___' -v '19.5.368' $_obj_swarm_0036_0050_calm_prim_u_vop_const1
opuserdata -n '___toolcount___' -v '123' $_obj_swarm_0036_0050_calm_prim_u_vop_const1
opuserdata -n '___toolid___' -v 'get_prim_u' $_obj_swarm_0036_0050_calm_prim_u_vop_const1
opcf ..
opcf $_obj_swarm_0036_0050_calm_prim_u_vop
oporder -e geometryvopglobal1 geometryvopoutput1 calc_prim_u const1 
opcf ..
opset -p on $_obj_swarm_0036_0050_calm_prim_u_vop

opcf $arg1
opcf $arg1
opwire -n $_obj_swarm_0036_0050_calm_line1 -0 $_obj_swarm_0036_0050_calm_copy1
opcf $arg1
opwire -n $_obj_swarm_0036_0050_calm_copy1 -0 $_obj_swarm_0036_0050_calm_prim_u_wrangle
opcf $arg1
opwire -n $_obj_swarm_0036_0050_calm_copy1 -0 $_obj_swarm_0036_0050_calm_prim_u_vop
opcf $_obj_swarm_0036_0050_calm_prim_u_vop
opwire -n $_obj_swarm_0036_0050_calm_prim_u_vop_calc_prim_u -3 $_obj_swarm_0036_0050_calm_prim_u_vop_geometryvopoutput1
opwire -n $_obj_swarm_0036_0050_calm_prim_u_vop_const1 -0 $_obj_swarm_0036_0050_calm_prim_u_vop_calc_prim_u
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_swarm_0036_0050_calm_prim_u_vop
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_swarm_0036_0050_calm_line1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>
</shelfDocument>
